{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishDetailComponent.js","components/FavoriteComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/reducers/dishes.js","redux/reducers/comments.js","redux/reducers/promotions.js","redux/reducers/leaders.js","redux/reducers/favorites.js","redux/auth.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","Media","tag","left","middle","object","body","heading","LeaderList","leaders","map","key","_id","list","About","Breadcrumb","BreadcrumbItem","to","active","CardHeader","title","RenderMenuItem","onClick","width","CardImgOverlay","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","id","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderDish","favorite","postFavorite","top","outline","RenderComments","comments","postComment","dishId","deleteComment","isAuthenticated","user","comment","rating","author","firstname","lastname","Intl","DateTimeFormat","year","month","day","format","Date","parse","updatedAt","username","CommentForm","toggleModal","state","isNavOpen","isModalOpen","setState","Modal","isOpen","toggle","ModalHeader","ModalBody","DishDetail","deleteFavorite","Favorites","favorites","Header","isSignupModalOpen","toggleNav","signupToggleModal","handleLogin","handleLogout","handleSignup","event","signupUser","value","password","preventDefault","loginUser","logoutUser","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","auth","isFetching","Jumbotron","Form","FormGroup","Input","innerRef","input","remember","Footer","dishesFailed","errmess","payload","addDishes","fetchComments","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","addComments","catch","commentsFailed","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","fetchFavorites","favoritesLoading","bearer","localStorage","getItem","headers","addFavorites","favoritesFailed","Main","fetchDishes","fetchPromos","fetchLeaders","PrivateRoute","component","rest","render","pathname","from","location","classNames","timeout","path","filter","featured","promotions","promo","exact","match","params","commentsErrMess","some","withRouter","connect","newComment","method","credentials","addComment","alert","actions","reset","feedback","creds","requestLogin","success","err","setItem","token","receiveLogin","requestSignup","receiveSignup","removeItem","commentId","Dishes","action","Comments","concat","Promotions","Leaders","Auth","InitialFeedback","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43e919ef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3000/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                        isLoading={props.promosLoading}\r\n                        errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                        isLoading={props.leaderLoading} \r\n                        errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    );\r\n\r\n}\r\n\r\nfunction LeaderList(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in key={leader._id}>\r\n                <div className=\"col-12 mt-2\">\r\n                        <RenderLeader leader={leader} />\r\n                </div>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        return(\r\n            <div className=\"col-12\"> \r\n                <h4>{props.leaders.errMess}</h4>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Media list>\r\n                <Stagger in>\r\n                    {leaders}\r\n                </Stagger>\r\n            </Media>\r\n        );\r\n    }\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <LeaderList leaders={props.leaders} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({ dish, onClick }) {\r\n        return(\r\n            <Card>\r\n                <Link to={`/menu/${dish._id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish._id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Label,\r\n    Modal, ModalHeader, ModalBody, Button, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    function RenderDish({dish, favorite, postFavorite}) {\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform in \r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardImgOverlay>\r\n                                <Button outline color=\"primary\" onClick={() => favorite ? console.log('Already favorite') : postFavorite(dish._id)}>\r\n                                    {favorite ?\r\n                                        <span className=\"fa fa-heart\"></span>\r\n                                        : \r\n                                        <span className=\"fa fa-heart-o\"></span>\r\n                                    }\r\n                                </Button>\r\n                            </CardImgOverlay>\r\n                            <CardBody>\r\n                                <CardTitle>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n            );\r\n\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId,deleteComment,isAuthenticated,user}) {\r\n        if (comments != null )\r\n       \r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                     \r\n                                return (\r\n                                    <Fade in key={comment._id}>\r\n                                        <li>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>{comment.rating} stars</p>\r\n                                        <p>-- {comment.author.firstname} {comment.author.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.updatedAt)))}</p>\r\n                                        </li>\r\n                                        {\r\n                                        isAuthenticated && user.username === comment.author.username\r\n                                        ?\r\n\r\n                                        <>\r\n                                        <Button outline onClick={() => deleteComment(comment._id)}>\r\n                                             <span className=\"fa fa-sign-in fa-lg\"></span> Delete Comment                                \r\n                                         </Button>\r\n                                         </>\r\n                                         :\r\n                                         <></>\r\n                                        }        \r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                            \r\n                             \r\n                            \r\n                              \r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                                <Fade >        \r\n                                <CommentForm dishId={dishId} postComment={postComment} />       \r\n                                </Fade>                                              \r\n                        </Stagger>\r\n                    </ul>\r\n                    \r\n                </div>\r\n            );\r\n    }\r\n\r\n    class CommentForm extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n    \r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n            \r\n            this.state = {\r\n              isNavOpen: false,\r\n              isModalOpen: false\r\n            };\r\n        }\r\n    \r\n        toggleModal() {\r\n            this.setState({\r\n              isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n    \r\n        handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.comment);\r\n        }\r\n    \r\n        render() {\r\n            return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"rating\">Rating</Label>\r\n                            <Control.select model=\".rating\" id=\"rating\" className=\"form-control\">\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Control.textarea model=\".comment\" id=\"comment\"\r\n                                        rows=\"6\" className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n               </Modal>\r\n            </div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null)        \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} favorite={props.favorite} postFavorite={props.postFavorite} />\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            deleteComment={props.deleteComment}\r\n                            dishId={props.dish._id}\r\n                            isAuthenticated = {props.isAuthenticated}\r\n                            user = {props.user} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Media, Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nfunction RenderMenuItem({ dish, deleteFavorite }) {\r\n    return(\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + dish.image} alt={dish.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{dish.name}</Media>\r\n                <p>{dish.description}</p>\r\n                <Button outline color=\"danger\" onClick={() => deleteFavorite(dish._id)}>\r\n                    <span className=\"fa fa-times\"></span>\r\n                </Button>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nconst Favorites = (props) => {\r\n\r\n    if (props.favorites.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.favorites.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.favorites.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.favorites.favorites) {\r\n\r\n        const favorites = props.favorites.favorites.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish._id} className=\"col-12 mt-5\">\r\n                    <RenderMenuItem dish={dish} deleteFavorite={props.deleteFavorite} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>My Favorites</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>My Favorites</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Media list>\r\n                        {favorites}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>You have no favorites</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorites;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n            isSignupModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.signupToggleModal = this.signupToggleModal.bind(this);\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n\r\n        this.handleSignup = this.handleSignup.bind(this);\r\n    \r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    signupToggleModal() {\r\n        this.setState({\r\n            isSignupModalOpen: !this.state.isSignupModalOpen\r\n        });\r\n    }\r\n\r\n    handleSignup(event) {\r\n        this.signupToggleModal();\r\n        this.props.signupUser({\r\n            firstname: this.firstname.value,\r\n            lastname : this.lastname.value,\r\n            username: this.username.value,\r\n            password: this.password.value,\r\n            });\r\n        event.preventDefault();\r\n    }\r\n    \r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        this.props.loginUser({username: this.username.value, password: this.password.value});\r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n    handleLogout() {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"/assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/favorites\">\r\n                                        <span className=\"fa fa-heart fa-lg\"></span> My Favorites\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    { !this.props.auth.isAuthenticated \r\n                                    ?\r\n                                    <>\r\n                                        <Button outline onClick={this.toggleModal}>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        <Button className=\"ml-4\" outline onClick={this.signupToggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Sign Up\r\n                                        {this.props.auth.isFetching ?\r\n                                            <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                            : null\r\n                                        }\r\n                                    </Button>\r\n                                    </>\r\n                                        :\r\n                                        <div>\r\n                                        <div className=\"navbar-text mr-3\">{this.props.auth.user.username}</div>\r\n                                        <Button outline onClick={this.handleLogout}>\r\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        </div>\r\n                                    }\r\n\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isSignupModalOpen} toggle={this.signupToggleModal}>\r\n                    <ModalHeader toggle={this.signupToggleModal}>Sign Up</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSignup}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"firstname\">Firstname</Label>\r\n                                <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                    innerRef={(input) => this.firstname = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"lastname\">Lastname</Label>\r\n                                <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                    innerRef={(input) => this.lastname = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Sign Up</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React  from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dish: dishId,\r\n        rating: rating,\r\n        comment: comment\r\n    }\r\n    console.log('Comment ', newComment);\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error(response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error =>  {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments ', error.message);\r\n        alert('Your comment could not be posted\\nError: '+ error.message); })\r\n}\r\n\r\nexport const deleteComment = (commentId) => (dispatch) => {\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'comments/' + commentId, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization' : bearer\r\n        },\r\n        credentials : 'same-origin'\r\n    })\r\n    .then(response => {\r\n\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {            \r\n            const error = new Error('Error '+ response.status+ ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n                      \r\n            \r\n        }\r\n    },error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comment =>{console.log('Comment Deleted', comment); dispatch(fetchComments());})\r\n    .catch(error => dispatch(commentsFailed(error.message)))\r\n\r\n}\r\n\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const commentsSuccess = (comment) => ({\r\n    type: ActionTypes.COMMENTS_SUCCESS,\r\n    payload: comment\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    console.log(feedback)\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(feedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { console.log('Feedback', response); alert('Thank you for your feedback!\\n'); })\r\n    .catch(error =>  { console.log('Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const requestLogin = (creds) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_REQUEST,\r\n        creds\r\n    }\r\n}\r\n  \r\nexport const receiveLogin = (response) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        token: response.token\r\n    }\r\n}\r\n  \r\nexport const loginError = (message) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n\r\n    dispatch(requestLogin(creds))\r\n\r\n    return fetch(baseUrl + 'users/login', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type':'application/json' \r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if (response.success) {\r\n            return response;\r\n        } else {\r\n            alert('Error: ' + response.err.message)\r\n            var error = new Error('Error: ' + response.status + ': ' + response.err.message);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n\r\n    .then(response => {\r\n        if (response.success) {\r\n            localStorage.setItem('token', response.token);\r\n            localStorage.setItem('creds', JSON.stringify(creds));\r\n\r\n            dispatch(fetchFavorites());\r\n            dispatch(receiveLogin(response));\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(loginError(error.message)))\r\n};\r\n\r\nexport const requestSignup = (creds) => {\r\n    return {\r\n        type: ActionTypes.SIGNUP_REQUEST,\r\n        creds\r\n    }\r\n}\r\n  \r\nexport const receiveSignup = (response) => {\r\n    return {\r\n        type: ActionTypes.SIGNUP_SUCCESS,\r\n        token: response.token\r\n    }\r\n}\r\n  \r\nexport const SignupError = (message) => {\r\n    return {\r\n        type: ActionTypes.SIGNUP_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const signupUser = (creds) => (dispatch) => {\r\n    dispatch(requestSignup(creds))\r\n\r\n    return fetch(baseUrl + 'users/signup', {\r\n        method:'POST',\r\n        headers : {\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if(response.success) {\r\n            return response;\r\n        } else {\r\n            console.log(response)\r\n            alert('Error: ' + response.message)\r\n            \r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => {\r\n        if(response.success) {\r\n            dispatch(receiveSignup(response));\r\n        }\r\n        else {\r\n            const error = new Error('Error '+ response.status);\r\n            error.response = response;\r\n\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(SignupError(error.message)))\r\n};\r\n\r\nexport const requestLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_REQUEST\r\n    }\r\n}\r\n  \r\nexport const receiveLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n// Logs the user out\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('creds');\r\n    dispatch(favoritesFailed(\"Error 401: Unauthorized\"));\r\n    dispatch(receiveLogout())\r\n}\r\n\r\nexport const postFavorite = (dishId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + dishId, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\"_id\": dishId}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(favorites => { console.log('Favorite Added', favorites); dispatch(addFavorites(favorites)); })\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\n\r\nexport const deleteFavorite = (dishId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + dishId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n         else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(favorite => { console.log('Favorite Deleted', favorite); dispatch(addFavorites(favorite)); })\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n};\r\n\r\nexport const fetchFavorites = () => (dispatch) => {\r\n    dispatch(favoritesLoading(true));\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites', {\r\n        headers: {\r\n            'Authorization': bearer\r\n        },\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(favorites => dispatch(addFavorites(favorites)))\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\n\r\nexport const favoritesLoading = () => ({\r\n    type: ActionTypes.FAVORITES_LOADING\r\n});\r\n\r\nexport const favoritesFailed = (errmess) => ({\r\n    type: ActionTypes.FAVORITES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addFavorites = (favorites) => ({\r\n    type: ActionTypes.ADD_FAVORITES,\r\n    payload: favorites\r\n});","\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const COMMENTS_SUCCESS ='COMMENTS_SUCCESS';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED ='COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING ='PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS'\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\r\n\r\n\r\nexport const FAVORITES_LOADING = 'FAVORITES_LOADING';\r\nexport const FAVORITES_FAILED = 'FAVORITES_FAILED';\r\nexport const ADD_FAVORITES = 'ADD_FAVORITES'","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Favorites from './FavoriteComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders, loginUser, logoutUser,signupUser ,fetchFavorites, postFavorite, deleteFavorite,deleteComment } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders,\r\n      favorites: state.favorites,\r\n      auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, comment) => dispatch(postComment(dishId, rating, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  signupUser: (creds) => dispatch(signupUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n  fetchFavorites: () => dispatch(fetchFavorites()),\r\n  postFavorite: (dishId) => dispatch(postFavorite(dishId)),\r\n  deleteFavorite: (dishId) => dispatch(deleteFavorite(dishId)),\r\n  deleteComment : (commentId) => dispatch(deleteComment(commentId))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n    this.props.fetchFavorites();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n\r\n      return(\r\n        this.props.auth.isAuthenticated\r\n        ?\r\n        \r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish._id === match.params.dishId)[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          \r\n          comments={\r\n            \r\n            this.props.comments.comments.filter((comment) => comment.dish === match.params.dishId)\r\n            \r\n          }\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n          deleteComment={this.props.deleteComment}\r\n          isAuthenticated={this.props.auth.isAuthenticated}\r\n          user = {this.props.auth.user}\r\n\r\n          favorite={\r\n            \r\n            ((this.props.favorites.favorites || []).dishes || []).some((dish) => dish._id === match.params.dishId)}\r\n            \r\n          postFavorite={this.props.postFavorite}\r\n          \r\n          \r\n          />\r\n        :\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish._id === match.params.dishId)[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dish === match.params.dishId)}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n          favorite={false}\r\n          postFavorite={this.props.postFavorite}\r\n          />\r\n      );\r\n\r\n    }\r\n\r\n\r\n    const PrivateRoute = ({ component: Component, ...rest }) => (\r\n      <Route {...rest} render={(props) => (\r\n        this.props.auth.isAuthenticated\r\n          ? <Component {...props} />\r\n          : <Redirect to={{\r\n              pathname: '/home',\r\n              state: { from: props.location }\r\n            }} />\r\n      )} />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Header auth={this.props.auth} \r\n          loginUser={this.props.loginUser}\r\n          signupUser= {this.props.signupUser} \r\n          logoutUser={this.props.logoutUser} \r\n          />   \r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />}/>\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <PrivateRoute exact path=\"/favorites\" component={() => <Favorites favorites={this.props.favorites} deleteFavorite={this.props.deleteFavorite} />} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.COMMENTS_SUCCESS:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading : true,\r\n    errMess : null,\r\n    leaders : []}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders : []};\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const favorites = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        favorites: {\r\n            dishes: [\"\"],\r\n            user:{}\r\n        }\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_FAVORITES:\r\n            return {...state, isLoading: false, errMess: null, favorites: action.payload };\r\n\r\n        case ActionTypes.FAVORITES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, favorites: null};\r\n\r\n        case ActionTypes.FAVORITES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, favorites: null};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Auth = (state = {\r\n        isLoading: false,\r\n        isAuthenticated: localStorage.getItem('token') ? true : false,\r\n        token: localStorage.getItem('token'),\r\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\r\n        errMess: null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.creds\r\n            };\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: '',\r\n                token: action.token\r\n            };\r\n        case ActionTypes.LOGIN_FAILURE:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.message\r\n            };\r\n        case ActionTypes.SIGNUP_REQUEST:\r\n            return {...state,\r\n            isLoading: true,\r\n            isAuthenticated: false,\r\n            user : action.creds\r\n            };\r\n        case ActionTypes.SIGNUP_SUCCESS:\r\n            return {...state,\r\n            isLoading: false,\r\n            isAuthenticated: false,\r\n            errMess : ''\r\n            };\r\n        case ActionTypes.SIGNUP_FAILURE:\r\n            return {...state,\r\n            isLoading: false,\r\n            isAuthenticated: false,\r\n            errMess : action.message\r\n            };\r\n\r\n        case ActionTypes.LOGOUT_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: true\r\n            };\r\n        case ActionTypes.LOGOUT_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                token: '',\r\n                user: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore} from './redux/configureStore'\n\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n  render()\n        { \n          return (\n            <Provider store = {store}>\n              <BrowserRouter>\n                <div>\n                  <Main/>               \n                </div>\n              </BrowserRouter>\n            </Provider>\n          );\n        }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './reducers/dishes';\r\nimport { Comments } from './reducers/comments';\r\nimport { Promotions } from './reducers/promotions';\r\nimport { Leaders } from './reducers/leaders';\r\nimport { favorites } from './reducers/favorites';\r\nimport { Auth } from './auth';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            auth: Auth,\r\n            favorites,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}